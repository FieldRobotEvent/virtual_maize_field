from __future__ import annotations

from launch import LaunchDescription
from launch.actions import DeclareLaunchArgument, IncludeLaunchDescription
from launch.launch_description_sources import PythonLaunchDescriptionSource
from launch.substitutions import (
    LaunchConfiguration,
    PathJoinSubstitution,
    TextSubstitution,
)
from launch_ros.substitutions import FindPackageShare


def generate_launch_description() -> LaunchDescription:
    robot_name = LaunchConfiguration("robot_name")

    # Create launch arguments
    declare_robot_name_cmd = DeclareLaunchArgument(
        name="robot_name", default_value="robot_model"
    )

    start_spawn_entity_cmd = Node(
        package="ros_gz_sim",
        executable="create",
        arguments=[
            "-topic",
            "robot_description",
            "-name",
            robot_name,
            "-x",
            "{{ x }}",
            "-y",
            "{{ y }}",
            "-z",
            "{{ z }}",
            "-R",
            "0",
            "-P",
            "0",
            "-Y",
            "{{ yaw }}",
        ],
    )

    # Create the launch description and populate
    ld = LaunchDescription()

    # Declare the launch options
    ld.add_action(declare_world_cmd)
    ld.add_action(declare_file_cmd)
    ld.add_action(declare_model_string_cmd)
    ld.add_action(declare_topic_cmd)
    ld.add_action(declare_entity_name_cmd)
    ld.add_action(declare_allow_renaming_cmd)
    ld.add_action(spawn_model_description)

    return ld

