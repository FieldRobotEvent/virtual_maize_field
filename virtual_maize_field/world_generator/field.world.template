<?xml version="1.0"?>
<!-- Seed: {{ seed }} -->
<sdf version="1.9">
  <world name="virtual_maize_field">

    <!-- Change max step size to increase the simulation speed but decrease the accuracy. -->
    <physics name="10ms" type="ignored">
      <max_step_size>0.01</max_step_size>
      <real_time_factor>1.0</real_time_factor>
    </physics>
  
    <plugin
      filename="libignition-gazebo-physics-system.so"
      name="ignition::gazebo::systems::Physics">
    </plugin>
    <plugin
      filename="libignition-gazebo-scene-broadcaster-system.so"
      name="ignition::gazebo::systems::SceneBroadcaster">
    </plugin>

    <light type="directional" name="sun">
      <!-- Disable shadows to avoid flickering on non-gpu pc, see: 
           https://github.com/gazebosim/gz-sim/issues/2267 -->
      <cast_shadows>false</cast_shadows>
      <pose>0 0 10 0 0 0</pose>
      <diffuse>0.8 0.8 0.8 1</diffuse>
      <specular>0.2 0.2 0.2 1</specular>
      <attenuation>
        <range>1000</range>
        <constant>0.9</constant>
        <linear>0.01</linear>
        <quadratic>0.001</quadratic>
      </attenuation>
      <direction>-0.5 0.1 -0.9</direction>
    </light>

    <scene>
      <sky>
        <clouds>
          <speed>12</speed>
        </clouds>
      </sky>
      <grid>false</grid>
    </scene>

    <model name="heightmap">
      <static>true</static>
      <link name="link">
        <visual name="ground_plane">
          <geometry>
            <heightmap>
              <use_terrain_paging>false</use_terrain_paging>
              <texture>
                <diffuse>model://materials/textures/grass_color.jpg</diffuse>
                <normal>model://materials/textures/grass_normal.jpg</normal>
                <size>4</size>
              </texture>
              <texture>
                <diffuse>model://materials/textures/dirt_diffusespecular.png</diffuse>
                <normal>model://materials/textures/flat_normal.png</normal>
                <size>1</size>
              </texture>
              <!-- <texture>
                <diffuse>model://materials/textures/grass_color.jpg</diffuse>
                <normal>model://materials/textures/grass_normal.jpg</normal>
                <size>4</size>
              </texture> -->
              <!-- Without this unused 3. texture the blend between the first 2 doesn"t work -->
              <texture>
                <diffuse>model://materials/textures/fungus_diffusespecular.png</diffuse>
                <normal>model://materials/textures/flat_normal.png</normal>
                <size>1</size>
              </texture>
              <blend>
                <min_height>{{ heightmap.max_elevation }}</min_height>
                <fade_dist>0.05</fade_dist>
              </blend>
              <!-- <blend>
                <min_height>{{ heightmap.total_height - (heightmap.max_elevation / 2) }}</min_height>
                <fade_dist>0.05</fade_dist>
              </blend> -->
              <!-- Without this unused 3. texture the blend between the first 2 doesn"t work -->
              <blend>
                <min_height>4</min_height>
                <fade_dist>5</fade_dist>
              </blend>
              <uri>{{ heightmap.cache_dir }}/virtual_maize_field_heightmap.png</uri>
              <size>{{ heightmap.size }} {{ heightmap.size }} {{ heightmap.total_height }}</size>
              <pos>{{ heightmap.pos.x }} {{ heightmap.pos.y }} 0</pos>
            </heightmap>
          </geometry>
        </visual>
        <collision name="collision">
          <geometry>
            <heightmap>
              <uri>{{ heightmap.cache_dir }}/virtual_maize_field_heightmap.png</uri>
              <size>{{ heightmap.size }} {{ heightmap.size }} {{ heightmap.total_height }}</size>
              <pos>{{ heightmap.pos.x }} {{ heightmap.pos.y }} 0</pos>
            </heightmap>
          </geometry>
        </collision>
      </link>
    </model>
    {% for coordinate in coordinates -%} 
    {# Cylinder model #} 
    {% if coordinate.type == "cylinder" -%} 
    <model name="{{ coordinate.name }}">
      <pose frame="">{{ coordinate.x }} {{ coordinate.y }} {{ coordinate.z }} 0 -0 0</pose>
      <link
        name="{{ coordinate.name }}_link">
        <inertial>
          <mass>{{ coordinate.mass }}</mass>
          <inertia>
            <ixx>{{ coordinate.inertia.ixx }}</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>{{ coordinate.inertia.iyy }}</iyy>
            <iyz>0</iyz>
            <izz>{{ coordinate.inertia.izz }}</izz>
          </inertia>
        </inertial>
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>{{ coordinate.radius }}</radius>
              <length>{{ coordinate.height }}</length>
            </cylinder>
          </geometry>
          <max_contacts>10</max_contacts>
          <surface>
            <contact>
              <ode />
            </contact>
            <bounce />
            <friction>
              <torsional>
                <ode />
              </torsional>
              <ode />
            </friction>
          </surface>
        </collision>
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>{{ coordinate.radius }}</radius>
              <length>{{ coordinate.height }}</length>
            </cylinder>
          </geometry>
          <material>
            <ambient>0.437790 0.985028 0.656685 1.0</ambient>
            <diffuse>0.297093 0.668460 0.445640 1.0</diffuse>
            <specular>0.000000 0.000000 0.000000 1.0</specular>
            <emissive>0.0 0.0 0.0 0.0</emissive>
          </material>
        </visual>
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link> 
    </model> 
    {# All ghost models have to be defined manually, since the SDF files already contains the collisions. #} 
    {% elif coordinate.ghost == true -%} 
    <model name="ghost_{{coordinate.name}}">
      <pose>{{ coordinate.x }} {{ coordinate.y }} {{ coordinate.z }} {{ coordinate.roll }} {{ coordinate.pitch }} {{ coordinate.yaw }}</pose>
      <static>true</static>
      <link name="{{ coordinate.name }}_link"> 
        {{ coordinate.custom_visual -}} 
        <self_collide>0</self_collide>
        <enable_wind>0</enable_wind>
        <kinematic>0</kinematic>
      </link>
    </model> 
    {# All other models can be included by using the SDF #} 
    {% else %} 
    <include>
      <uri>model://{{ coordinate.type }}</uri>
      <pose>{{ coordinate.x }} {{ coordinate.y }} {{ coordinate.z }} {{ coordinate.roll }} {{ coordinate.pitch }} {{ coordinate.yaw }}</pose>
      <name>{{ coordinate.name }}</name>
      <static>{{ coordinate.static }}</static>
    </include> 
    {% endif -%} 
    {% endfor -%}
  </world>
</sdf>